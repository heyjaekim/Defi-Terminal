[{"C:\\Users\\hwang\\Desktop\\defi-poolhopper\\src\\index.js":"1","C:\\Users\\hwang\\Desktop\\defi-poolhopper\\src\\components\\styles.js":"2","C:\\Users\\hwang\\Desktop\\defi-poolhopper\\src\\reportWebVitals.js":"3","C:\\Users\\hwang\\Desktop\\defi-poolhopper-test\\src\\Defipage.js":"4","C:\\Users\\hwang\\Desktop\\defi-poolhopper-test\\src\\components\\MainApp\\ConnectedPage.js":"5","C:\\Users\\hwang\\Desktop\\defi-poolhopper\\src\\App.js":"6","C:\\Users\\hwang\\Desktop\\defi-poolhopper\\src\\components\\SidebarData.js":"7","C:\\Users\\hwang\\Desktop\\defi-poolhopper\\src\\components\\Navbar.js":"8","C:\\Users\\hwang\\Desktop\\defi-poolhopper\\src\\components\\TokenInfo.js":"9","C:\\Users\\hwang\\Desktop\\defi-poolhopper\\src\\components\\TokenAddr.js":"10","C:\\Users\\hwang\\Desktop\\defi-poolhopper\\src\\MainApp\\PortfolioPage.js":"11","C:\\Users\\hwang\\Desktop\\defi-poolhopper\\src\\components\\UserList.js":"12","C:\\Users\\hwang\\Desktop\\defi-poolhopper\\src\\components\\PhoneForm.js":"13","C:\\Users\\hwang\\Desktop\\defi-poolhopper\\src\\components\\PhoneInfo.js":"14","C:\\Users\\hwang\\Desktop\\defi-poolhopper\\src\\components\\PhoneInfoList.js":"15","C:\\Users\\hwang\\Desktop\\defi-poolhopper\\src\\components\\PercentForm.js":"16","C:\\Users\\hwang\\Desktop\\defi-poolhopper\\src\\MainApp\\ConnectedPage_new.js":"17","C:\\Users\\hwang\\Desktop\\defi-poolhopper\\src\\MainApp\\StakePage.js":"18","C:\\Users\\hwang\\Desktop\\defi-poolhopper\\src\\components\\AddPool.js":"19","C:\\Users\\hwang\\Desktop\\defi-poolhopper\\src\\components\\PercentSlider.js":"20","C:\\Users\\hwang\\Desktop\\defi-poolhopper\\src\\components\\GasSlider.js":"21","C:\\Users\\hwang\\Desktop\\defi-poolhopper\\src\\components\\TopPool.js":"22","C:\\Users\\hwang\\Desktop\\defi-poolhopper\\src\\components\\ConnectMask.js":"23","C:\\Users\\hwang\\Desktop\\defi-poolhopper\\src\\MainApp\\AboutPage.js":"24"},{"size":517,"mtime":1609749843085,"results":"25","hashOfConfig":"26"},{"size":2035,"mtime":1610010163427,"results":"27","hashOfConfig":"26"},{"size":375,"mtime":1609749843085,"results":"28","hashOfConfig":"26"},{"size":13832,"mtime":1609751493646,"results":"29","hashOfConfig":"30"},{"size":82498,"mtime":1609751640009,"results":"31","hashOfConfig":"30"},{"size":42693,"mtime":1610532512485,"results":"32","hashOfConfig":"26"},{"size":589,"mtime":1610070183100,"results":"33","hashOfConfig":"26"},{"size":2951,"mtime":1610073402756,"results":"34","hashOfConfig":"26"},{"size":1863,"mtime":1610510472949,"results":"35","hashOfConfig":"26"},{"size":3433,"mtime":1610516750000,"results":"36","hashOfConfig":"26"},{"size":37089,"mtime":1610533932208,"results":"37","hashOfConfig":"26"},{"size":639,"mtime":1610087521162,"results":"38","hashOfConfig":"26"},{"size":1047,"mtime":1610090898726,"results":"39","hashOfConfig":"26"},{"size":556,"mtime":1610091193617,"results":"40","hashOfConfig":"26"},{"size":422,"mtime":1610090749654,"results":"41","hashOfConfig":"26"},{"size":9537,"mtime":1610338158179,"results":"42","hashOfConfig":"26"},{"size":43470,"mtime":1610342888612,"results":"43","hashOfConfig":"26"},{"size":38181,"mtime":1610533798204,"results":"44","hashOfConfig":"26"},{"size":7124,"mtime":1610515907306,"results":"45","hashOfConfig":"26"},{"size":1284,"mtime":1610421602742,"results":"46","hashOfConfig":"26"},{"size":1481,"mtime":1610418544479,"results":"47","hashOfConfig":"26"},{"size":7171,"mtime":1610533830570,"results":"48","hashOfConfig":"26"},{"size":4381,"mtime":1610524680459,"results":"49","hashOfConfig":"26"},{"size":3869,"mtime":1610527216483,"results":"50","hashOfConfig":"26"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"1nkg68d",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"jllz2v",{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"53"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"53"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"53"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"82"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"91"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"53"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"53"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"53"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"C:\\Users\\hwang\\Desktop\\defi-poolhopper\\src\\index.js",[],["112","113"],"C:\\Users\\hwang\\Desktop\\defi-poolhopper\\src\\components\\styles.js",[],"C:\\Users\\hwang\\Desktop\\defi-poolhopper\\src\\reportWebVitals.js",[],"C:\\Users\\hwang\\Desktop\\defi-poolhopper-test\\src\\Defipage.js",[],"C:\\Users\\hwang\\Desktop\\defi-poolhopper-test\\src\\components\\MainApp\\ConnectedPage.js",["114","115"],"C:\\Users\\hwang\\Desktop\\defi-poolhopper\\src\\App.js",[],"C:\\Users\\hwang\\Desktop\\defi-poolhopper\\src\\components\\SidebarData.js",["116","117"],"import React from 'react';\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport * as IoIcons from 'react-icons/io';\r\n\r\nexport const SidebarData = [\r\n    {\r\n        title: 'Stake',\r\n        path: '/',\r\n        icon: <AiIcons.AiFillHome />,\r\n        cName: 'nav-text'\r\n    },\r\n    {\r\n        title: 'Portfolio',\r\n        path: '/portfolio',\r\n        icon: <AiIcons.AiFillHome />,\r\n        cName: 'nav-text'\r\n    },\r\n    {\r\n        title: 'About',\r\n        path: '/about',\r\n        icon: <AiIcons.AiFillHome />,\r\n        cName: 'nav-text'\r\n    },\r\n]","C:\\Users\\hwang\\Desktop\\defi-poolhopper\\src\\components\\Navbar.js",["118"],"import React from \"react\";\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport { IoWalletSharp, IoWalletOutline } from 'react-icons/io5';\r\nimport { SidebarData } from \"./SidebarData\";\r\nimport { Link } from 'react-router-dom';\r\nimport './css/Navbar.css';\r\nimport { IconContext } from \"react-icons/lib\";\r\n\r\nclass Navbar extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            sidebar:false\r\n        };\r\n    };\r\n\r\n    showSidebar = () => {\r\n        this.setState({sidebar:!this.state.sidebar});\r\n        console.log(this.state.sidebar);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <IconContext.Provider value={{color:'white'}}>\r\n                <div className=\"home\">\r\n                    <section className=\"navbar-attr\">\r\n                        <div class=\"navbar-hamber\" id=\"ConnectedPage-view\" style={{display:\"block\"}}>\r\n                            <Link className=\"navbar-logo\" to=\"/\">\r\n                                <img src=\"images/Logo_White.png\" alt=\"\" height=\"57px\" width=\"281.8px\" />\r\n                            </Link>\r\n                            <Link to=\"#\" className=\"menu-bars\">\r\n                                <FaIcons.FaBars onClick={this.showSidebar}/>\r\n                            </Link>\r\n                            <div className=\"navbar-walletaddr\">\r\n                                <h5> {this.props.WalletAddress}</h5>\r\n                                <h5 className=\"m\"><IoWalletOutline/></h5>\r\n                            </div>\r\n                        </div>\r\n                        <nav className={this.state.sidebar ? \"nav-menu active\" : \"nav-menu\"}>\r\n                            <ul className=\"nav-menu-items\" onClick={this.showSidebar} >\r\n                                <li className=\"navbar-toggle\" >\r\n                                    <Link to=\"#\" className=\"menu-bars\">\r\n                                        <AiIcons.AiOutlineClose />\r\n                                    </Link>\r\n                                </li>\r\n                                {SidebarData.map((item, index) => {\r\n                                    return (\r\n                                        <li key={index} className={item.cName}>\r\n                                            <Link to={item.path}>\r\n                                                {item.icon}\r\n                                                <span className=\"menu-titles\">{item.title}</span>\r\n                                            </Link>\r\n                                        </li>\r\n                                    )\r\n                                })}\r\n                            </ul>\r\n                        </nav>\r\n                    </section>\r\n                </div>\r\n                </IconContext.Provider>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","C:\\Users\\hwang\\Desktop\\defi-poolhopper\\src\\components\\TokenInfo.js",[],"C:\\Users\\hwang\\Desktop\\defi-poolhopper\\src\\components\\TokenAddr.js",["119","120"],"import React from 'react';\r\nimport { Row } from 'reactstrap';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport { PercentAnimationBox } from \"./styles\";\r\nimport PercentSlider from \"./PercentSlider.js\";\r\n\r\nclass TokenAddr extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            token: 0,\r\n            percent: 0,\r\n            usd: 0,\r\n        };\r\n        this.token = props.token;\r\n        this.updateTradeTotalSize = props.updateTradeTotalSize;\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        this.setState({\r\n            percentBoxs: [\r\n                document.getElementById(this.token.percent0),\r\n                document.getElementById(this.token.percent25),\r\n                document.getElementById(this.token.percent50),\r\n                document.getElementById(this.token.percent75),\r\n                document.getElementById(this.token.percent100)\r\n            ]\r\n        });\r\n    }\r\n\r\n    allocToSubTokenSize = async () => {\r\n        this.token.lpAmtEth = this.token.tokenSize * (this.state.percent / 100);\r\n        this.setState((state, props) => {\r\n            return { token: props.token.tokenSize * (state.percent / 100) }\r\n        });\r\n    }\r\n\r\n    SetTokenAmount = async (percentage) => {\r\n        // console.log(\"ether balance: \", this.props.token.etherBalance);\r\n        this.setState({\r\n            token: (parseFloat(percentage) / 100) * parseFloat(this.props.token.tokenSize)\r\n        });\r\n        this.props.token.lpAmtEth = this.state.token.toFixed(8);\r\n        this.props.token.lpAmtUsd = (1000 * this.state.token).toFixed(2);\r\n        // console.log( this.props.token.tokenSize);\r\n        // this.updateTradeTotalSize();\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Row>\r\n                    <div className=\"eth_usdt_row\">\r\n                        <div className=\"display_default_pair\" id=\"default_pair\">\r\n                            <button className=\"eth-icon\"><img src={this.props.token.pair_token0_img} alt=\"\"></img></button>\r\n                            <button className=\"dollar-icon\"><img src={this.props.token.pair_token1_img} alt=\"\"></img></button>\r\n                            <h5 style={{ paddingLeft: \"93px\" }}> {this.props.token.pairLeft} - {this.props.token.pairRight} </h5>\r\n                        </div>\r\n                        <div className=\"eth-unstake_address\">\r\n                            <input className=\"address\" type=\"text\" value={this.props.token.pair_addr} readOnly />\r\n                        </div>\r\n                        <div className=\"eth-percentslider\">\r\n                            <PercentSlider SetTokenAmount={this.SetTokenAmount} />\r\n                        </div>\r\n                        <div className=\"eth-lp_amount\">\r\n                            <span style={{color:\"#fafafa\", fontSize:\"22px\"}}>{this.props.token.lpAmtEth} ETH</span>\r\n                            <br></br>\r\n                            <span style={{color:\"#fafafa\", fontSize:\"22px\"}}>$ {this.props.token.lpAmtUsd}</span>\r\n                        </div>\r\n                    </div>\r\n                </Row>\r\n                {/* <input className=\"address\" type=\"text\" value={this.token.address} readOnly />\r\n                <div className=\"percent_slider\">\r\n                </div> */}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default TokenAddr;\r\n","C:\\Users\\hwang\\Desktop\\defi-poolhopper\\src\\MainApp\\PortfolioPage.js",["121","122","123"],"C:\\Users\\hwang\\Desktop\\defi-poolhopper\\src\\components\\UserList.js",[],["124","125"],"C:\\Users\\hwang\\Desktop\\defi-poolhopper\\src\\components\\PhoneForm.js",[],["126","127"],"C:\\Users\\hwang\\Desktop\\defi-poolhopper\\src\\components\\PhoneInfo.js",["128"],"import React, { Component } from 'react';\r\n\r\nclass PhoneInfo extends Component {\r\n  static defaultProps = {\r\n    info: {\r\n      name: '이름',\r\n      email: '010-0000-0000',\r\n      id: 0\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    const style = {\r\n      border: '1px solid black',\r\n      padding: '8px',\r\n      margin: '8px'\r\n    };\r\n\r\n    const {\r\n      name, email, id\r\n    } = this.props.info;\r\n    \r\n    return (\r\n      <div style={style}>\r\n        <div><b>{name}</b></div>\r\n        <div>{email}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PhoneInfo;","C:\\Users\\hwang\\Desktop\\defi-poolhopper\\src\\components\\PhoneInfoList.js",[],"C:\\Users\\hwang\\Desktop\\defi-poolhopper\\src\\components\\PercentForm.js",["129"],"import React, { Component } from 'react';\r\nimport { Row } from 'reactstrap';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport { PercentAnimationBox } from \"./styles\";\r\nimport Web3 from \"web3\";\r\n\r\nclass PercentForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            token: 0,\r\n            percent: 0,\r\n            pair_token0_name: null,\r\n            pair_token1_name: null\r\n        };\r\n        this.token = props.token;\r\n        this.totalTradeSize = props.totalTradeSize;\r\n        this.updateTradeTotalSize = props.updateTradeTotalSize;\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        this.setState({\r\n            percentBoxs: [\r\n                document.getElementById(this.token.percent0),\r\n                document.getElementById(this.token.percent25),\r\n                document.getElementById(this.token.percent50),\r\n                document.getElementById(this.token.percent75),\r\n                document.getElementById(this.token.percent100)\r\n            ]\r\n        });\r\n    }\r\n\r\n    allocToSubTokenSize = async () => {\r\n        this.token.lpAmtEth = this.token.tokenSize * (this.state.percent / 100);\r\n        this.setState((state, props) => {\r\n            return { token: props.token.tokenSize * (state.percent / 100) }\r\n        });\r\n    }\r\n\r\n    percentAnimation = async (num, ele) => {\r\n        this.state.percentBoxs.forEach((tab) => {\r\n            tab.style.color = \"#8BAEC2\";\r\n        });\r\n        if (num === 0) {\r\n            this.setState({ percent: 0 });\r\n            document.getElementById(this.token.percentAniBox).style.left = \"0px\";\r\n        } else if (num === 25) {\r\n            this.setState({ percent: 25 });\r\n            document.getElementById(this.token.percentAniBox).style.left = \"80px\";\r\n        } else if (num === 50) {\r\n            this.setState({ percent: 50 });\r\n            document.getElementById(this.token.percentAniBox).style.left = \"163px\";\r\n        } else if (num === 75) {\r\n            this.setState({ percent: 75 });\r\n            document.getElementById(this.token.percentAniBox).style.left = \"245px\";\r\n        } else if (num === 100) {\r\n            this.setState({ percent: 100 });\r\n            document.getElementById(this.token.percentAniBox).style.left = \"328px\";\r\n        }\r\n        this.allocToSubTokenSize();\r\n        ele.style.color = \"#fff\";\r\n    }\r\n\r\n    handleDisplayPairImg() {\r\n        document.getElementById(this.props.token.default_t_id).style.display = \"none\";\r\n        document.getElementById(this.props.token.address_t_id).style.display = \"block\";\r\n    }\r\n\r\n    handleDisplayDefaultImag() {\r\n        document.getElementById(this.props.token.default_t_id).style.display = \"block\";\r\n        document.getElementById(this.props.token.address_t_id).style.display = \"none\";\r\n    }\r\n\r\n    handlePairChange = async (event) => {\r\n        //this.web3.eth.Contract\r\n        try {\r\n            event.preventDefault();\r\n            console.log(\"handlePairChange\", event.target.value);\r\n            this.web3 = new Web3(window.ethereum);\r\n            let pair_addr = String(event.target.value);\r\n            let PairContract = new this.web3.eth.Contract(this.props.token.uniswap_pair_abi, pair_addr);\r\n            let token0_addr = await PairContract.methods.token0().call();\r\n            let token1_addr = await PairContract.methods.token1().call();\r\n            console.log(\"handlePairChange\", token0_addr, token1_addr);\r\n\r\n            let token0 = new this.web3.eth.Contract(this.props.token.erc20_abi, token0_addr);\r\n            let token1 = new this.web3.eth.Contract(this.props.token.erc20_abi, token1_addr);\r\n            let token0_name = await token0.methods.symbol().call();\r\n            // if(token0_name.includes(\"Wrapped \")){token0_name = token0_name.replace(\"Wrapped \", \"W\");}\r\n            let token1_name = await token1.methods.symbol().call();\r\n            console.log(\"handlePairChange\", token0_name, token1_name);\r\n\r\n            let token0_img = \"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/\" + token0_addr + \"/logo.png\"\r\n            let token1_img = \"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/\" + token1_addr + \"/logo.png\"\r\n            this.props.token.pair_addr = pair_addr;\r\n            this.props.token.pair_cont = PairContract;\r\n            this.props.token.pair_token0 = token0;\r\n            this.props.token.pair_token1 = token1;\r\n            this.props.token.pair_token0_name = token0_name;\r\n            this.props.token.pair_token1_name = token1_name;\r\n            this.props.token.pair_token0_img = token0_img;\r\n            this.props.token.pair_token1_img = token1_img;\r\n            this.setState({\r\n                pair_token0_name:token0_name,\r\n                pair_token1_name:token1_name\r\n            })\r\n            this.handleDisplayPairImg();\r\n        } catch (event) {\r\n            this.handleDisplayDefaultImag();\r\n            console.log(\"Display Default Pair Image\")\r\n            this.props.token.pair_addr = null;\r\n            this.props.token.pair_cont = null;\r\n            this.props.token.pair_token0 = null;\r\n            this.props.token.pair_token1 = null;\r\n            this.props.token.pair_token0_name = null;\r\n            this.props.token.pair_token1_name = null;\r\n            this.props.token.pair_token0_img = null;\r\n            this.props.token.pair_token1_img = null;\r\n        }\r\n    };\r\n    //0x6eF026fC19F36E0747AAFDA652731Ce05441C4C1\r\n\r\n    handleTokenChange = async (evt) => {\r\n        evt.preventDefault();\r\n\r\n        let token = Number(evt.target.value);\r\n        this.props.token.tokenSize = token;\r\n        console.log(\"handleTokenChange tokenSize: \", this.props.token.tokenSize, \"tokenId: \", this.props.token.tokenName);\r\n        this.setState({\r\n            token: token,\r\n        });\r\n\r\n        this.updateTradeTotalSize()\r\n\r\n    };\r\n\r\n    render() {\r\n        console.log(\"t_id: \" + this.props.token.t_id);\r\n        console.log(\"pair names: \" + this.props.token.pair_token0_name + this.props.token.pair_token1_name);\r\n        return (\r\n            <React.Fragment>\r\n                <Row>\r\n                    <div className=\"eth-usdt-row\">\r\n                        <div className=\"display_default_pair\" id={this.props.token.default_t_id}>\r\n                            <div className=\"eth-dollar\">\r\n                                <button className=\"eth-icon\"><img src=\"./images/eth_icon.png\" alt=\"\"></img></button>\r\n                                <button className=\"dollar-icon\"><img src=\"./images/dollar_icon.png\" alt=\"\"></img></button>\r\n                                <div className=\"eth_usdt_pair\">\r\n                                    <h5> {this.props.token.pairLeft} - {this.props.token.pairRight} </h5>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"display_address_pair\" id={this.props.token.address_t_id}>\r\n                            <button className=\"eth-icon\"><img src={this.props.token.pair_token0_img} alt=\"\"></img></button>\r\n                            <button className=\"dollar-icon\"><img src={this.props.token.pair_token1_img} alt=\"\"></img></button>\r\n                            <div className=\"eth_usdt_pair\">\r\n                                <h5>  {this.props.token.pair_token0_name} - {this.state.pair_token1_name} </h5>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"eth_token_size\">\r\n                            <div className=\"token_size\">\r\n                                <input className=\"inputTokenSize\" type=\"number\" name={this.token.tokenName} min=\"0\"\r\n                                    value={this.state.token} placeholder='0' onChange={this.handleTokenChange} />\r\n                            </div>\r\n                            <div className=\"percent_area\">\r\n                                <PercentAnimationBox id={this.token.percentAniBox}></PercentAnimationBox>\r\n                                <button type=\"button\" id={this.token.percent0}\r\n                                    onClick={(e) => { this.percentAnimation(0, e.target); }}>0%</button>\r\n                                <button type=\"button\" id={this.token.percent25}\r\n                                    onClick={(e) => { this.percentAnimation(25, e.target); }}>25%</button>\r\n                                <button type=\"button\" id={this.token.percent50}\r\n                                    onClick={(e) => { this.percentAnimation(50, e.target); }}>50%</button>\r\n                                <button type=\"button\" id={this.token.percent75}\r\n                                    onClick={(e) => { this.percentAnimation(75, e.target); }}>75%</button>\r\n                                <button type=\"button\" id={this.token.percent100}\r\n                                    onClick={(e) => { this.percentAnimation(100, e.target); }}>100%</button>\r\n                            </div>\r\n                            <div className=\"address\">\r\n                                <input className=\"address-input\" type=\"text\" name=\"\"\r\n                                    onChange={(e) => { this.handlePairChange(e); }} />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </Row>\r\n                <div className=\"eth-usdt-row\">\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PercentForm;",["130","131"],"C:\\Users\\hwang\\Desktop\\defi-poolhopper\\src\\MainApp\\ConnectedPage_new.js",["132"],"import React from 'react';\r\nimport { Row } from 'reactstrap';\r\nimport { GasSpeedAnimationBox } from \"../components/styles\";\r\nimport Web3 from \"web3\";\r\nimport BigNumber from \"bignumber.js\";\r\nimport '../components/css/ConnectedPage.css';\r\nimport '../components/css/StakePage.css'\r\n// import { Motion, spring } from 'react-motion';\r\nimport { AiFillPlusCircle, AiFillMinusCircle } from 'react-icons/ai';\r\n\r\n// import PhoneForm from '../components/PhoneForm.js';\r\n// import PhoneInfoList from '../components/PhoneInfoList.js';\r\n// import CustomizedSlider from '../components/Slider.js';\r\nimport PercentForm from '../components/PercentForm.js';\r\n\r\nclass ConnectedPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            SmartContract: null,\r\n            SmartContractAddr: \"0xe42477108055aA6F904EC8524dCaf85f80D3a3e8\", //[MainNet] // \"0xe1A712878786A2993C3Ba5a3CABC62423D601F35\" EasyDefi[KOVAN]\r\n            SmartContractABI: [{ \"inputs\": [{ \"internalType\": \"address\", \"name\": \"_pair\", \"type\": \"address\" }], \"name\": \"CheckTokensFromPair\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" }], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"uint256\", \"name\": \"_amount\", \"type\": \"uint256\" }], \"name\": \"emergencyETHWithdrawal\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"_token\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"_amount\", \"type\": \"uint256\" }], \"name\": \"emergencyTokenWithdrawal\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"uint256\", \"name\": \"_ethamount\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"_token\", \"type\": \"address\" }], \"name\": \"GetTokenFromEth\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"payable\", \"type\": \"function\" }, { \"inputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"id\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"user\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"pair\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amt_lp_usd\", \"type\": \"uint256\" }], \"name\": \"Log\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"previousOwner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"newOwner\", \"type\": \"address\" }], \"name\": \"OwnershipTransferred\", \"type\": \"event\" }, { \"inputs\": [], \"name\": \"renounceOwnership\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"uint256\", \"name\": \"_fee\", \"type\": \"uint256\" }], \"name\": \"SetFee\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"_pair\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"_target\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"_amt\", \"type\": \"uint256\" }], \"name\": \"StakeLP\", \"outputs\": [], \"stateMutability\": \"payable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address[]\", \"name\": \"_pair_list\", \"type\": \"address[]\" }, { \"internalType\": \"uint256[]\", \"name\": \"_amt_list\", \"type\": \"uint256[]\" }, { \"internalType\": \"uint256\", \"name\": \"_max_slippage\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"_deadline\", \"type\": \"uint256\" }], \"name\": \"StakeLPList\", \"outputs\": [], \"stateMutability\": \"payable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address[]\", \"name\": \"_pair\", \"type\": \"address[]\" }, { \"internalType\": \"uint256[]\", \"name\": \"_amt\", \"type\": \"uint256[]\" }], \"name\": \"TransferLPList\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"newOwner\", \"type\": \"address\" }], \"name\": \"transferOwnership\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"_pair\", \"type\": \"address\" }, { \"internalType\": \"addresspayable\", \"name\": \"target\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amtLP\", \"type\": \"uint256\" }], \"name\": \"WithdrawLP\", \"outputs\": [], \"stateMutability\": \"payable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address[]\", \"name\": \"_pair\", \"type\": \"address[]\" }, { \"internalType\": \"uint256[]\", \"name\": \"_amt\", \"type\": \"uint256[]\" }, { \"internalType\": \"uint256\", \"name\": \"_max_slippage\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"_deadline\", \"type\": \"uint256\" }], \"name\": \"WithdrawLPList\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"stateMutability\": \"payable\", \"type\": \"receive\" }, { \"inputs\": [], \"name\": \"DAI\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"deadline\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"fee\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"_pair\", \"type\": \"address\" }], \"name\": \"GetLPTokenBalance\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"_pair\", \"type\": \"address\" }], \"name\": \"GetLPUSDBalance\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"_pair\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"_amount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"_max_slippage\", \"type\": \"uint256\" }], \"name\": \"GetLPWorth\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"_pair\", \"type\": \"address\" }], \"name\": \"GetResidualBalance\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"isOwner\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }], \"name\": \"LPTokenBalance\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }], \"name\": \"LPUSDBalance\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"maxSlippage\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"owner\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pair\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"percentage_unit\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"token0\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"token1\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"uniswap_fee\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"USD\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"USDC\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"USDT\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }], \"stateMutability\": \"view\", \"type\": \"function\" }],\r\n            uniswap_pair_abi: [{ \"inputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"sender\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount0\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount1\", \"type\": \"uint256\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }], \"name\": \"Burn\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"sender\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount0\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount1\", \"type\": \"uint256\" }], \"name\": \"Mint\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"sender\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount0In\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount1In\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount0Out\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount1Out\", \"type\": \"uint256\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }], \"name\": \"Swap\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": false, \"internalType\": \"uint112\", \"name\": \"reserve0\", \"type\": \"uint112\" }, { \"indexed\": false, \"internalType\": \"uint112\", \"name\": \"reserve1\", \"type\": \"uint112\" }], \"name\": \"Sync\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }], \"name\": \"Transfer\", \"type\": \"event\" }, { \"constant\": true, \"inputs\": [], \"name\": \"DOMAIN_SEPARATOR\", \"outputs\": [{ \"internalType\": \"bytes32\", \"name\": \"\", \"type\": \"bytes32\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"MINIMUM_LIQUIDITY\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"PERMIT_TYPEHASH\", \"outputs\": [{ \"internalType\": \"bytes32\", \"name\": \"\", \"type\": \"bytes32\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }], \"name\": \"allowance\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [{ \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }], \"name\": \"approve\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" }], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }], \"name\": \"balanceOf\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [{ \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }], \"name\": \"burn\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"amount0\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"amount1\", \"type\": \"uint256\" }], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"decimals\", \"outputs\": [{ \"internalType\": \"uint8\", \"name\": \"\", \"type\": \"uint8\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"factory\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"getReserves\", \"outputs\": [{ \"internalType\": \"uint112\", \"name\": \"_reserve0\", \"type\": \"uint112\" }, { \"internalType\": \"uint112\", \"name\": \"_reserve1\", \"type\": \"uint112\" }, { \"internalType\": \"uint32\", \"name\": \"_blockTimestampLast\", \"type\": \"uint32\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [{ \"internalType\": \"address\", \"name\": \"_token0\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"_token1\", \"type\": \"address\" }], \"name\": \"initialize\", \"outputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"kLast\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [{ \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }], \"name\": \"mint\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"liquidity\", \"type\": \"uint256\" }], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"name\", \"outputs\": [{ \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }], \"name\": \"nonces\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [{ \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"deadline\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" }], \"name\": \"permit\", \"outputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"price0CumulativeLast\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"price1CumulativeLast\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [{ \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }], \"name\": \"skim\", \"outputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [{ \"internalType\": \"uint256\", \"name\": \"amount0Out\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"amount1Out\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" }], \"name\": \"swap\", \"outputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"symbol\", \"outputs\": [{ \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [], \"name\": \"sync\", \"outputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"token0\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"token1\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [{ \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }], \"name\": \"transfer\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" }], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [{ \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }], \"name\": \"transferFrom\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" }], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }],\r\n            erc20_abi: [{ \"constant\": true, \"inputs\": [], \"name\": \"name\", \"outputs\": [{ \"name\": \"\", \"type\": \"string\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [{ \"name\": \"_spender\", \"type\": \"address\" }, { \"name\": \"_value\", \"type\": \"uint256\" }], \"name\": \"approve\", \"outputs\": [{ \"name\": \"\", \"type\": \"bool\" }], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [{ \"name\": \"\", \"type\": \"uint256\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [{ \"name\": \"_from\", \"type\": \"address\" }, { \"name\": \"_to\", \"type\": \"address\" }, { \"name\": \"_value\", \"type\": \"uint256\" }], \"name\": \"transferFrom\", \"outputs\": [{ \"name\": \"\", \"type\": \"bool\" }], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"decimals\", \"outputs\": [{ \"name\": \"\", \"type\": \"uint8\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [{ \"name\": \"_owner\", \"type\": \"address\" }], \"name\": \"balanceOf\", \"outputs\": [{ \"name\": \"balance\", \"type\": \"uint256\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"symbol\", \"outputs\": [{ \"name\": \"\", \"type\": \"string\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [{ \"name\": \"_to\", \"type\": \"address\" }, { \"name\": \"_value\", \"type\": \"uint256\" }], \"name\": \"transfer\", \"outputs\": [{ \"name\": \"\", \"type\": \"bool\" }], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [{ \"name\": \"_owner\", \"type\": \"address\" }, { \"name\": \"_spender\", \"type\": \"address\" }], \"name\": \"allowance\", \"outputs\": [{ \"name\": \"\", \"type\": \"uint256\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"payable\": true, \"stateMutability\": \"payable\", \"type\": \"fallback\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"name\": \"spender\", \"type\": \"address\" }, { \"indexed\": false, \"name\": \"value\", \"type\": \"uint256\" }], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": false, \"name\": \"value\", \"type\": \"uint256\" }], \"name\": \"Transfer\", \"type\": \"event\" }],\r\n            manualTradeSize: 1, /* Stake 상태에서 Manual Trade Size 값을 지정하고 \r\n                                    Allocation Percent 사용하여 (Trade Size * Allocation Percent) => Sub-Size Token을 계산 */\r\n            allocOverflowDet: [],\r\n            totalTradeSize: 0, /* 각 Unipair의 Token Size 들의 값의 합 */\r\n            gasSpeed: 0,\r\n            t_id: 0,\r\n            tokenData: [],\r\n        };\r\n        this.EtherBalance = props.EtherBalance;\r\n        this.WalletAddress = props.WalletAddress;\r\n        this.UsdBalance = props.USDBalance;\r\n        this.SetTokenData = props.SetTokenData;\r\n        this.SetStake = props.SetStake;\r\n        this.GasSpeed = props.GasSpeed;\r\n        this.ConnectWallet = props.ConnectWallet;\r\n        this.SubmitSetTrades = props.SubmitSetTrades; /* Onclick Submit button to proceed Tokens towards designated Addresses */\r\n        this.IsConnectedMetaMask = props.IsConnectedMetaMask;\r\n        this.IsStake = props.Stake;\r\n        this.gasSpeed = props.gasSpeed;\r\n        \r\n    };\r\n\r\n    static defaultProps = {\r\n        EtherBalance: 3000,\r\n        WalletAddress: \"Default Example Address\",\r\n        GasSpeed: \"slow\"\r\n    };\r\n\r\n    componentDidMount() {\r\n        // window.ethereum.autoRefreshOnNetworkChange = false\r\n        this.web3 = new Web3(window.ethereum);\r\n        this.BN = this.web3.utils.BN;\r\n        let smartcontract = new this.web3.eth.Contract(this.state.SmartContractABI, this.state.SmartContractAddr);\r\n\r\n        this.setState({\r\n            SmartContract: smartcontract,\r\n            /* Tab Animation(stake, gas, percent allocation)을 위한 setState */\r\n            stakeStatus: [\r\n                document.getElementById(\"stake\"),\r\n                document.getElementById(\"unstake\")\r\n            ],\r\n            gasSpeedCosts: [\r\n                document.getElementById(\"slow\"),\r\n                document.getElementById(\"medium\"),\r\n                document.getElementById(\"fast\")\r\n            ],\r\n        });\r\n    }\r\n\r\n    /* PercentForm으로 전달되는 token data의 상태들 입니다. */\r\n    /* Unipair address row 에서 업데이트 한 후 invest를 누를 시에 this.SetTokenData를 통해 App.js에 있는 this.state.tokenData로 데이터 값이 업데이트 됩니다. */\r\n    addNewTokenData = async () => {\r\n        const state = {\r\n            default_t_id: 'default_'+this.state.t_id.toString(),\r\n            address_t_id: 'address_'+this.state.t_id.toString(),\r\n            uniswap_pair_abi: this.state.uniswap_pair_abi,\r\n            erc20_abi: this.state.erc20_abi,\r\n            pairLeft: 'ETH',\r\n            pairRight: 'USD',\r\n            dateStaked: '',\r\n            amountStaked: 0,\r\n            isProfit: false,\r\n            profitSince: '',\r\n            pair_cont: null,\r\n            pair_addr: '',\r\n            pair_cont: null,\r\n            pair_token0: null,\r\n            pair_token1: null,\r\n            pair_token0_name: '',\r\n            pair_token1_name: '',\r\n            pair_token0_img: null,\r\n            pair_token1_img: null,\r\n            // token price 및 profit 측정하는데 필요한 요소들\r\n            tokenName: 'token_' + this.state.t_id.toString(),\r\n            tokenSize: 0,\r\n            tokenSizeInUSD: 0,\r\n            currentTokenValue: 0, /* 실시간 currentTokenValue가 업데이트 되어야함 */\r\n            currentUsdValue: 0,\r\n            lpAmtEth: 0, /* to change lp amount (variable placed in TokenAddr.js) */\r\n            lpAmtUsd: 0,\r\n            // percent box 만들때 필요한 요소들\r\n            percentAniBox: 'percent_animation_box_' + this.state.t_id.toString(),\r\n            selectedPercent: 0,\r\n            percent0: 'percent0_' + this.state.t_id.toString(),\r\n            percent25: 'percent25_' + this.state.t_id.toString(),\r\n            percent50: 'percent50_' + this.state.t_id.toString(),\r\n            percent75: 'percent75_' + this.state.t_id.toString(),\r\n            percent100: 'percent100_' + this.state.t_id.toString()\r\n        }\r\n        const { tokenData } = this.state;\r\n        this.setState({\r\n            tokenData: tokenData.concat({ t_id: this.state.t_id++, ...state })\r\n        })\r\n    }\r\n\r\n\r\n    /* Meta Mask를 연결하지 않은 상태에서 Connect Your Wallet를 누른 경우 로그인된 페이지로 변환 */\r\n    setDetailArea() {\r\n        document.getElementById(\"connect_your_wallet\").style.display = \"none\";\r\n        document.getElementById(\"detail_select_area\").style.display = \"block\";\r\n        document.getElementById(\"detail_select_area2\").style.display = \"block\";\r\n    }\r\n\r\n    setDetailAreaStake() {\r\n        document.getElementById(\"stake_trade\").style.display = \"block\";\r\n        document.getElementById(\"unstake_trade\").style.display = \"none\";\r\n        document.getElementById(\"stake_wallet\").style.display = \"block\";\r\n        document.getElementById(\"unstake_wallet\").style.display = \"none\";\r\n        document.getElementById(\"trading_rows_stake\").style.display = \"block\";\r\n        document.getElementById(\"trading_rows_unstake\").style.display = \"none\";\r\n        document.getElementById(\"context1_stake\").style.display = \"block\";\r\n        document.getElementById(\"context1_unstake\").style.display = \"none\";\r\n        document.getElementById(\"context2_stake\").style.display = \"block\";\r\n        document.getElementById(\"context2_unstake\").style.display = \"none\";\r\n        document.getElementById(\"context3_stake\").style.display = \"block\";\r\n        document.getElementById(\"context3_unstake\").style.display = \"none\";\r\n        this.cancelToResetStates();\r\n    }\r\n    setDetailAreaUnstake() {\r\n        document.getElementById(\"stake_trade\").style.display = \"none\";\r\n        document.getElementById(\"unstake_trade\").style.display = \"none\";\r\n        document.getElementById(\"stake_wallet\").style.display = \"none\";\r\n        document.getElementById(\"unstake_wallet\").style.display = \"block\";\r\n        document.getElementById(\"trading_rows_stake\").style.display = \"none\";\r\n        document.getElementById(\"trading_rows_unstake\").style.display = \"block\";\r\n        document.getElementById(\"context1_stake\").style.display = \"none\";\r\n        document.getElementById(\"context1_unstake\").style.display = \"none\";\r\n        document.getElementById(\"context2_stake\").style.display = \"none\";\r\n        document.getElementById(\"context2_unstake\").style.display = \"block\";\r\n        document.getElementById(\"context3_stake\").style.display = \"none\";\r\n        document.getElementById(\"context3_unstake\").style.display = \"block\";\r\n        this.cancelToResetStates();\r\n    }\r\n\r\n    /* Manually input Trade Size */\r\n    handleManualTradeSize = evt => {\r\n        const manualTradeSize = Number(evt.target.value);\r\n        this.setState(prevState => ({\r\n            manualTradeSize,\r\n        }))\r\n    }\r\n\r\n    /* OnClick Cancel to reset every states */\r\n    cancelToResetStates = () => {\r\n        this.setState((state) => {\r\n            return {\r\n                manualTradeSize: 1,\r\n                allocOverflowDet: [],\r\n                autoTradeSize: 0,\r\n                speed: \"slow\",\r\n                token1: 0,\r\n                token2: 0,\r\n                token3: 0,\r\n                token4: 0,\r\n                token5: 0,\r\n                percent: 0,\r\n                percent2: 0,\r\n                percent3: 0,\r\n                percent4: 0,\r\n                percent5: 0,\r\n                stake: true,\r\n                gasSpeed: 0\r\n            }\r\n        })\r\n    };\r\n\r\n    submitTrades = async (isStake) => {\r\n        if (this.props.IsConnectedMetaMask) {\r\n            if (this.props.IsStake) {\r\n                console.log('invest')\r\n                this.SetTokenData(this.state.tokenData);\r\n                // this.Invest();\r\n\r\n            } else {\r\n                console.log('withdraw')\r\n                this.Withdraw();\r\n            }\r\n        } else {\r\n            alert(\"Connected 'MetaMask' first.\");\r\n        }\r\n    };\r\n\r\n    Invest = async () => {\r\n        console.log(\"1 Investing !\", this.state.token1, this.state.percent, this.props.gasSpeed);\r\n        console.log(\"2 Investing !\", this.state.token2, this.state.percent2, this.props.gasSpeed);\r\n        console.log(\"3 Investing !\", this.state.token3, this.state.percent3, this.props.gasSpeed);\r\n\r\n        let response = await fetch(\"https://ethgasstation.info/api/ethgasAPI.json\");\r\n        let jsonData = await response.json();\r\n        let avgGasPrice = Number(jsonData['average']) / 10;\r\n        let fastGasPrice = Number(jsonData['fastest']) / 10;\r\n\r\n        // Invest Token\r\n        let wei1 = BigNumber(this.state.token1 * Math.pow(10, 18)); //eth to wei\r\n        wei1 = wei1.integerValue();//Math.floor( wei1 );\r\n\r\n        let wei2 = BigNumber(this.state.token2 * Math.pow(10, 18)); //eth to wei\r\n        wei2 = wei2.integerValue(); //Math.floor( wei2 );\r\n\r\n        let wei3 = BigNumber(this.state.token3 * Math.pow(10, 18)); //eth to wei\r\n        wei3 = wei3.integerValue(); //Math.floor( wei3 );\r\n\r\n        let pair_list = [];\r\n        let wei_list = [];\r\n        let wei_amount = BigNumber(0);\r\n        if (wei1 !== 0) {\r\n            pair_list.push(this.state.pair1_addr);\r\n            wei_list.push(wei1.toString());\r\n            wei_amount = wei1.plus(wei_amount);\r\n        }\r\n        if (wei2 !== 0) {\r\n            pair_list.push(this.state.pair2_addr);\r\n            wei_list.push(wei2.toString());\r\n            wei_amount = wei2.plus(wei_amount);\r\n        }\r\n        if (wei3 !== 0) {\r\n            pair_list.push(this.state.pair3_addr);\r\n            wei_list.push(wei3.toString());\r\n            wei_amount = wei3.plus(wei_amount);\r\n        }\r\n\r\n        // Gas Price\r\n        let gasPrice = 0;\r\n        if (this.props.gasSpeed === \"slow\") { gasPrice = Math.floor(avgGasPrice / 2); }\r\n        else if (this.props.gasSpeed === \"medium\") { gasPrice = Math.floor(avgGasPrice); }\r\n        else { gasPrice = Math.floor(fastGasPrice * 1.5); }\r\n        console.log(\"Gas:\", avgGasPrice, fastGasPrice, gasPrice, Math.floor(avgGasPrice / 2));\r\n        gasPrice = BigNumber(gasPrice * Math.pow(10, 9));\r\n\r\n        // Nonce\r\n        const nonce = await this.web3.eth.getTransactionCount(this.state.SmartContractAddr);\r\n\r\n        //Gas Speed\r\n        let gasSpeed = 0;\r\n        if (this.props.gasSpeed === \"slow\") { gasSpeed = 1.0; } else if (this.props.gasSpeed === \"medium\") { gasSpeed = 1.2; } else { gasSpeed = 1.5; }\r\n\r\n        //Gas Estimate\r\n        let gasEstimate = 0;\r\n        // await this.state.SmartContract.methods.StakeLPList([this.state.pair1_addr], [wei], 25, Date.now()+2000).estimateGas({from:this.props.WalletAddress,\r\n        //                                                                                                                                 value:wei\r\n        //                                                                                                                             }).then(function(gasAmount){\r\n        //                                                                                                                                 console.log(gasAmount)\r\n        //                                                                                                                                 gasEstimate = gasAmount;\r\n        //                                                                                                                             })\r\n        //                                                                                                                             .catch(function(error){\r\n        //                                                                                                                                 console.log(error)\r\n        //                                                                                                                             });;\r\n        await this.state.SmartContract.methods.StakeLPList(pair_list, wei_list, 250, Date.now() + 2000)\r\n            .estimateGas({\r\n                from: this.props.WalletAddress,\r\n                value: wei_amount\r\n            })\r\n            .then(function (gasAmount) {\r\n                console.log(gasAmount)\r\n                gasEstimate = gasAmount;\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error)\r\n            });;\r\n\r\n        console.log(\"Invest \", pair_list, wei_list, wei_amount, gasEstimate, gasPrice, nonce);\r\n\r\n        let results = await this.state.SmartContract.methods.StakeLPList(pair_list, wei_list, 250, Date.now() + 2000)\r\n            .send({\r\n                from: this.props.WalletAddress,\r\n                value: wei_amount, //송금할 Ether [Wei]\r\n                gas: Math.floor(gasEstimate * gasSpeed), //gas 량\r\n                gasPrice: gasPrice.toString(),\r\n                nonce: nonce//재접속한 횟수\r\n            });\r\n\r\n        if (results['status']) {\r\n            alert(\"Success Invest Transaction\");\r\n        }\r\n        else {\r\n            alert(\"Fail Invest Transaction\");\r\n        }\r\n    };\r\n\r\n    /* Handle Gas Speed \r\n       gas speed slow: 0, medium: 1, fast: 2 */\r\n    handleGasSpeedSlow = evt => {\r\n        this.setState({\r\n            gasSpeed: 0\r\n        }, function () {\r\n            console.log(this.state.gasSpeed)\r\n        });\r\n    };\r\n    handleGasSpeedMedium = evt => {\r\n        this.setState({\r\n            gasSpeed: 1\r\n        }, function () { console.log(this.state.gasSpeed) });\r\n    };\r\n    handleGasSpeedFast = evt => {\r\n        this.setState({\r\n            gasSpeed: 2\r\n        }, function () { console.log(this.state.gasSpeed) });\r\n    };\r\n\r\n    /* percentAnimation 함수 안에서 실행되어 Sub Token Size로 Allocate하는 함수 */\r\n    /* Total Allocated Size가 Total Trade Size를 넘는 경우 Focusing하고있는 Sub Token Size을 뺀 나머지 값을 3등분하여 배분 */\r\n    allocToSubTokenSize = () => {\r\n        this.state.allocOverflowDet.push(this.state.token1);\r\n        this.setState((state) => {\r\n            return { token1: state.manualTradeSize * (state.percent / 100) }\r\n        });\r\n    };\r\n    allocToSubTokenSize2 = () => {\r\n        this.state.allocOverflowDet.push(this.state.token2)\r\n        this.setState((state) => {\r\n            return { token2: state.manualTradeSize * (state.percent2 / 100) }\r\n        });\r\n    };\r\n    allocToSubTokenSize3 = () => {\r\n        this.state.allocOverflowDet.push(this.state.token3)\r\n        this.setState((state) => {\r\n            return { token3: state.manualTradeSize * (state.percent3 / 100) }\r\n        });\r\n    };\r\n    allocToSubTokenSize4 = () => {\r\n        this.state.allocOverflowDet.push(this.state.token4)\r\n        this.setState((state) => {\r\n            return { token4: state.manualTradeSize * (state.percent4 / 100) }\r\n        });\r\n    };\r\n\r\n    /* Stake/Unstake Tab Animagtion */\r\n    StakeTogglerAnimation(stake, ele) {\r\n        this.state.gasSpeedCosts.forEach((tab) => {\r\n            tab.style.color = \"#8BAEC2\";\r\n        });\r\n        if (stake === true) {\r\n            this.setState({ stake: true })\r\n            document.getElementById(\"stakebox\").style.left = \"0px\";\r\n        } else if (stake === false) {\r\n            this.setState({ stake: false })\r\n            document.getElementById(\"stakebox\").style.left = \"291px\";\r\n        }\r\n        ele.style.color = \"#fff\";\r\n    };\r\n\r\n    /* Gas Speed Tab Animagtion */\r\n    gasSpeedAnimation(speed, ele) {\r\n        this.state.gasSpeedCosts.forEach((tab) => {\r\n            tab.style.color = \"#8BAEC2\";\r\n        });\r\n        if (speed === \"slow\") {\r\n            this.setState({ speed: \"slow\" });\r\n            document.getElementById(\"gas_speed_box\").style.left = \"0px\";\r\n        } else if (speed === \"medium\") {\r\n            this.setState({ speed: \"medium\" });\r\n            document.getElementById(\"gas_speed_box\").style.left = \"161px\";\r\n        } else if (speed === \"fast\") {\r\n            this.setState({ speed: \"fast\" });\r\n            document.getElementById(\"gas_speed_box\").style.left = \"323px\";\r\n        }\r\n        ele.style.color = \"#fff\";\r\n    };\r\n\r\n    removeTokenData = async () => {\r\n        this.state.tokenData.pop();\r\n        this.forceUpdate();\r\n        let total=0;\r\n        for (let i = 0; i < this.state.tokenData.length; i++) {\r\n            total += this.state.tokenData[i]['tokenSize']\r\n        }\r\n        this.setState({ totalTradeSize: total});\r\n    }\r\n\r\n    updateTradeTotalSize = async () => {\r\n        let total = 0;\r\n        for (let i = 0; i < this.state.tokenData.length; i++) {\r\n            total += this.state.tokenData[i]['tokenSize']\r\n        }\r\n        this.setState({ totalTradeSize: total});\r\n    }\r\n\r\n    render() {\r\n        // console.log(this.state.t_id.toString());\r\n        // console.log(this.state.tokenData);\r\n        // console.log(this.state.totalTradeSize);\r\n        console.log(\"this.state.tokenData: \" + this.state.tokenData);\r\n        // console.log(\"this.props.tokenData: \" + this.props.tokenData);\r\n        const mapToTestTokenStake = (data) => {\r\n            return data.map((token, i) => {\r\n                return (<PercentForm token={token} updateTradeTotalSize={this.updateTradeTotalSize} key={i} />);\r\n            })\r\n        }\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"home\">\r\n                    <section className=\"home_attr\" id=\"home\">\r\n                        <Row>\r\n                            <div id=\"detail_select_area\" style={{ display: 'flex' }}>\r\n                                <div className=\"balance-eth\">\r\n                                    <div className=\"mt--16 ml--33\">\r\n                                        <h5 className=\"available\">Available Balance</h5>\r\n                                        <h3 className=\"available-eth\">{this.props.EtherBalance} ETH</h3>\r\n                                        <h5 className=\"available-dollar\">$ {this.props.UsdBalance}</h5>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div id=\"detail_select_area2\" style={{ display: 'flex' }}>\r\n                                <div className=\"cancel-submit\">\r\n                                    <button className=\"button1\" onClick={this.cancelToResetStates}><h5 className=\"button-context\">Reset</h5></button>\r\n                                    <button className=\"button1\" onClick={this.submitTrades}><h5 className=\"button-context\">Submit</h5></button>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"trade-information\">\r\n                                <Row>\r\n                                    <h5 className=\"context1\" id=\"context1_stake\">\r\n                                        Total (ETH)\r\n                                    </h5>\r\n                                    <h5 className=\"context2\" id=\"context2_stake\">\r\n                                        Wallet Address\r\n                                    </h5>\r\n                                    <h5 className=\"context3\" id=\"context3_stake\">\r\n                                        Faster speed costs more gas\r\n                                    </h5>\r\n                                </Row>\r\n                            </div>\r\n                            <div className=\"text-information-area\">\r\n                                <Row>\r\n                                    <div className=\"trade-size\" id=\"stake_trade\">\r\n                                        {/* <input className=\"stake_tradesize_manual\" type=\"number\" value={this.state.manualTradeSize} \r\n                                            onChange={this.handleManualTradeSize}/> */}\r\n                                        <input className=\"stake_tradesize_manual\" type=\"number\" value={this.state.totalTradeSize} readOnly/>\r\n                                        {/* <input className=\"stake_tradesize_auto\" type=\"number\" value={this.state.result} /> */}\r\n                                    </div>\r\n                                    <div className=\"wallet-address\" id=\"stake_wallet\">\r\n                                        <input className=\"input-wallet-address\" type=\"text\" value={this.props.WalletAddress} readOnly />\r\n                                    </div>\r\n                                    <div className=\"gas_speed_area\">\r\n                                        <GasSpeedAnimationBox id=\"gas_speed_box\"></GasSpeedAnimationBox>\r\n                                        <button type=\"button\" id=\"slow\" onClick={(e) => {\r\n                                            this.GasSpeed(\"slow\");\r\n                                            this.gasSpeedAnimation(\"slow\", e.target);\r\n                                        }}>Slow</button>\r\n                                        <button type=\"button\" id=\"medium\" onClick={(e) => {\r\n                                            this.GasSpeed(\"medium\");\r\n                                            this.gasSpeedAnimation(\"medium\", e.target);\r\n                                        }}>Medium</button>\r\n                                        <button type=\"button\" id=\"fast\" onClick={(e) => {\r\n                                            this.GasSpeed(\"fast\");\r\n                                            this.gasSpeedAnimation(\"fast\", e.target);\r\n                                        }}>Fast</button>\r\n                                    </div>\r\n                                </Row>\r\n                            </div>\r\n                        </Row>\r\n                        <button className=\"plusMinus plus\" onClick={this.addNewTokenData}><AiFillPlusCircle color='#F5B71E' size=\"30px\" /> </button>\r\n                        <button className=\"plusMinus-minus minus\" onClick={this.removeTokenData}><AiFillMinusCircle color='#F5B71E' size=\"30px\" /> </button>\r\n\r\n                        <Row>\r\n                            <div className=\"wallet-connected\">\r\n                                <div className=\"trading-rows\" id=\"trading_rows_stake\">\r\n                                    <Row>\r\n                                        <h5 className=\"context1\">Liquidity Pools</h5>\r\n                                        <h5 className=\"context2\">Investment Amount</h5>\r\n                                        <h5 className=\"context3\">Allocation</h5>\r\n                                        <h5 className=\"context3\">Address</h5>\r\n                                    </Row>\r\n                                </div>\r\n                            </div>\r\n                        </Row>\r\n\r\n\r\n                        {mapToTestTokenStake(this.state.tokenData)}\r\n\r\n\r\n                    </section>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default ConnectedPage;","C:\\Users\\hwang\\Desktop\\defi-poolhopper\\src\\MainApp\\StakePage.js",[],"C:\\Users\\hwang\\Desktop\\defi-poolhopper\\src\\components\\AddPool.js",["133"],"import React, { Component } from 'react';\r\nimport { Row } from 'reactstrap';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport PercentSlider from \"./PercentSlider.js\";\r\nimport Web3 from \"web3\";\r\n\r\nclass AddPool extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            token: 0,\r\n            percent: 0,\r\n            pair_token0_name: null,\r\n            pair_token1_name: null\r\n        };\r\n        this.token = props.token;\r\n        this.totalTradeSize = props.totalTradeSize;\r\n        this.updateTradeTotalSize = props.updateTradeTotalSize;\r\n    }\r\n\r\n    allocToSubTokenSize = async () => {\r\n        this.token.lpAmtEth = this.token.tokenSize * (this.state.percent / 100);\r\n        this.setState((state, props) => {\r\n            return { token: props.token.tokenSize * (state.percent / 100) }\r\n        });\r\n    }\r\n\r\n    handleDisplayPairImg() {\r\n        document.getElementById(this.props.token.default_t_id).style.display = \"none\";\r\n        document.getElementById(this.props.token.address_t_id).style.display = \"block\";\r\n    }\r\n\r\n    handleDisplayDefaultImag() {\r\n        document.getElementById(this.props.token.default_t_id).style.display = \"block\";\r\n        document.getElementById(this.props.token.address_t_id).style.display = \"none\";\r\n    }\r\n\r\n    handlePairChange = async (event) => {\r\n        //this.web3.eth.Contract\r\n        try {\r\n            event.preventDefault();\r\n            console.log(\"handlePairChange\", event.target.value);\r\n            this.web3 = new Web3(window.ethereum);\r\n            let pair_addr = String(event.target.value);\r\n            let PairContract = new this.web3.eth.Contract(this.props.token.uniswap_pair_abi, pair_addr);\r\n            let token0_addr = await PairContract.methods.token0().call();\r\n            let token1_addr = await PairContract.methods.token1().call();\r\n            console.log(\"handlePairChange\", token0_addr, token1_addr);\r\n\r\n            let token0 = new this.web3.eth.Contract(this.props.token.erc20_abi, token0_addr);\r\n            let token1 = new this.web3.eth.Contract(this.props.token.erc20_abi, token1_addr);\r\n            let token0_name = await token0.methods.symbol().call();\r\n            // if(token0_name.includes(\"Wrapped \")){token0_name = token0_name.replace(\"Wrapped \", \"W\");}\r\n            let token1_name = await token1.methods.symbol().call();\r\n            console.log(\"handlePairChange\", token0_name, token1_name);\r\n\r\n            let token0_img = \"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/\" + token0_addr + \"/logo.png\"\r\n            let token1_img = \"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/\" + token1_addr + \"/logo.png\"\r\n            this.props.token.pair_addr = pair_addr;\r\n            this.props.token.pair_cont = PairContract;\r\n            this.props.token.pair_token0 = token0;\r\n            this.props.token.pair_token1 = token1;\r\n            this.props.token.pair_token0_name = token0_name;\r\n            this.props.token.pair_token1_name = token1_name;\r\n            this.props.token.pair_token0_img = token0_img;\r\n            this.props.token.pair_token1_img = token1_img;\r\n            this.setState({\r\n                pair_token0_name: token0_name,\r\n                pair_token1_name: token1_name\r\n            })\r\n            this.handleDisplayPairImg();\r\n        } catch (event) {\r\n            this.handleDisplayDefaultImag();\r\n            console.log(\"Display Default Pair Image\")\r\n            this.props.token.pair_addr = null;\r\n            this.props.token.pair_cont = null;\r\n            this.props.token.pair_token0 = null;\r\n            this.props.token.pair_token1 = null;\r\n            this.props.token.pair_token0_name = null;\r\n            this.props.token.pair_token1_name = null;\r\n            this.props.token.pair_token0_img = null;\r\n            this.props.token.pair_token1_img = null;\r\n        }\r\n    };\r\n    //0x6eF026fC19F36E0747AAFDA652731Ce05441C4C1\r\n\r\n    handleTokenChange = async (evt) => {\r\n        evt.preventDefault();\r\n\r\n        let token = Number(evt.target.value);\r\n        this.props.token.tokenSize = token;\r\n        console.log(\"handleTokenChange tokenSize: \", this.props.token.tokenSize, \"tokenId: \", this.props.token.tokenName);\r\n        this.setState({\r\n            token: token,\r\n        });\r\n\r\n        this.updateTradeTotalSize()\r\n\r\n    };\r\n\r\n    SetTokenAmount = async(percentage) => {\r\n        // console.log(\"ether balance: \", this.props.token.etherBalance);\r\n        this.setState({\r\n            token: (parseFloat(percentage) / 100) * parseFloat(this.props.token.etherBalance)\r\n        });\r\n        this.props.token.tokenSize = this.state.token;\r\n        // console.log( this.props.token.tokenSize);\r\n        this.updateTradeTotalSize();\r\n    }\r\n\r\n    render() {\r\n        // console.log(\"t_id: \" + this.props.token.t_id);\r\n        // console.log(\"pair names: \" + this.props.token.pair_token0_name + this.props.token.pair_token1_name);\r\n        return (\r\n            <React.Fragment>\r\n                <Row>\r\n                    <div className=\"display_default_pair\" id={this.props.token.default_t_id}>\r\n                        <button className=\"eth_icon\"><img src=\"./images/eth_icon.png\" alt=\"\"></img></button>\r\n                        <button className=\"dollar_icon\"><img src=\"./images/dollar_icon.png\" alt=\"\"></img></button>\r\n                        <div className=\"eth_usdt_pair\">\r\n                            <h5> {this.props.token.pairLeft} - {this.props.token.pairRight} </h5>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"display_address_pair\" id={this.props.token.address_t_id}>\r\n                        <button className=\"eth_icon\"><img src={this.props.token.pair_token0_img} alt=\"\"></img></button>\r\n                        <button className=\"dollar_icon\"><img src={this.props.token.pair_token1_img} alt=\"\"></img></button>\r\n                        <div className=\"eth_usdt_pair\">\r\n                            <h5>  {this.props.token.pair_token0_name} - {this.props.token.pair_token1_name} </h5>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"eth_token_size\">\r\n                        <div className=\"address\">\r\n                            <input className=\"address-input\" type=\"text\" name=\"\" onChange={(e) => { this.handlePairChange(e); }} />\r\n                            <input className=\"inputTokenSize\" type=\"number\" name={this.token.tokenName} min=\"0\"\r\n                                value={this.state.token} placeholder='0' onChange={this.handleTokenChange} />\r\n                        </div>\r\n                        <div className=\"token_size\">\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"percent_slider\">\r\n                        <PercentSlider SetTokenAmount={this.SetTokenAmount} />  \r\n                    </div>\r\n                </Row>\r\n                <div className=\"eth-usdt-row\"></div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddPool;","C:\\Users\\hwang\\Desktop\\defi-poolhopper\\src\\components\\PercentSlider.js",["134","135"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Slider from '@material-ui/core/Slider';\r\n// import Typography from '@material-ui/core/Typography';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: 300 + theme.spacing(3) * 2,\r\n  },\r\n  margin: {\r\n    height: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst PrettoSlider = withStyles({\r\n  root: {\r\n    color: '#073d67',\r\n    height: 8,\r\n  },\r\n  thumb: {\r\n    height: 28,\r\n    width: 28,\r\n    backgroundColor: '#fff',\r\n    border: '2px solid currentColor',\r\n    marginTop: -2,\r\n    marginLeft: -12,\r\n    '&:focus, &:hover, &$active': {\r\n      boxShadow: 'inherit',\r\n    },\r\n  },\r\n  active: {},\r\n  valueLabel: {\r\n    left: 'calc(-50% + 4px)',\r\n  },\r\n  track: {\r\n    height: 24,\r\n    borderRadius: 4,\r\n  },\r\n  rail: {\r\n    height: 24,\r\n    borderRadius: 4,\r\n  },\r\n})(Slider);\r\n\r\nexport default function PercentSlider(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      \r\n      <PrettoSlider valueLabelDisplay=\"auto\" aria-label=\"pretto slider\" defaultValue={20} onChange={(e, value)=> props.SetTokenAmount(value)} />\r\n      \r\n    </div>\r\n  );\r\n}","C:\\Users\\hwang\\Desktop\\defi-poolhopper\\src\\components\\GasSlider.js",["136","137"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Slider from '@material-ui/core/Slider';\r\n// import Typography from '@material-ui/core/Typography';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: 300 + theme.spacing(3) * 2,\r\n  },\r\n  margin: {\r\n    height: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst PrettoSlider = withStyles({\r\n  root: {\r\n    color: '#073d67',\r\n    height: 8,\r\n  },\r\n  thumb: {\r\n    height: 28,\r\n    width: 28,\r\n    backgroundColor: '#fff',\r\n    border: '2px solid currentColor',\r\n    marginTop: -2,\r\n    marginLeft: -12,\r\n    '&:focus, &:hover, &$active': {\r\n      boxShadow: 'inherit',\r\n    },\r\n  },\r\n  active: {},\r\n  valueLabel: {\r\n    left: 'calc(-50% + 4px)',\r\n  },\r\n  track: {\r\n    height: 24,\r\n    borderRadius: 4,\r\n  },\r\n  rail: {\r\n    height: 24,\r\n    borderRadius: 4,\r\n  },\r\n})(Slider);\r\n\r\nexport default function GasSlider(props) {\r\n  const classes = useStyles();\r\n  // const [value, setValue] = 20;\r\n  // const { children, open, value } = props;\r\n  // const handleSubmit = (e) => {\r\n  //   e.preventDefault();\r\n  //   props.gasSpeed = Number(e.target.value)\r\n  // }\r\n  return (\r\n    <div className={classes.root}>\r\n      \r\n      <PrettoSlider valueLabelDisplay=\"auto\" aria-label=\"pretto slider\" defaultValue={20}  onChange={(e, value)=> props.SetGasSpeed(value)} />\r\n      \r\n    </div>\r\n  );\r\n}","C:\\Users\\hwang\\Desktop\\defi-poolhopper\\src\\components\\TopPool.js",["138"],"C:\\Users\\hwang\\Desktop\\defi-poolhopper\\src\\components\\ConnectMask.js",[],"C:\\Users\\hwang\\Desktop\\defi-poolhopper\\src\\MainApp\\AboutPage.js",[],{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":6,"column":10,"nodeType":"145","messageId":"146","endLine":6,"endColumn":23},{"ruleId":"143","severity":1,"message":"147","line":289,"column":15,"nodeType":"145","messageId":"146","endLine":289,"endColumn":27},{"ruleId":"143","severity":1,"message":"148","line":2,"column":13,"nodeType":"145","messageId":"146","endLine":2,"endColumn":20},{"ruleId":"143","severity":1,"message":"149","line":4,"column":13,"nodeType":"145","messageId":"146","endLine":4,"endColumn":20},{"ruleId":"143","severity":1,"message":"150","line":4,"column":10,"nodeType":"145","messageId":"146","endLine":4,"endColumn":23},{"ruleId":"143","severity":1,"message":"151","line":3,"column":10,"nodeType":"145","messageId":"146","endLine":3,"endColumn":25},{"ruleId":"143","severity":1,"message":"152","line":4,"column":10,"nodeType":"145","messageId":"146","endLine":4,"endColumn":29},{"ruleId":"153","severity":1,"message":"154","line":85,"column":39,"nodeType":"155","messageId":"156","endLine":85,"endColumn":41},{"ruleId":"153","severity":1,"message":"157","line":95,"column":37,"nodeType":"155","messageId":"156","endLine":95,"endColumn":39},{"ruleId":"153","severity":1,"message":"157","line":96,"column":42,"nodeType":"155","messageId":"156","endLine":96,"endColumn":44},{"ruleId":"139","replacedBy":"158"},{"ruleId":"141","replacedBy":"159"},{"ruleId":"139","replacedBy":"160"},{"ruleId":"141","replacedBy":"161"},{"ruleId":"143","severity":1,"message":"162","line":20,"column":20,"nodeType":"145","messageId":"146","endLine":20,"endColumn":22},{"ruleId":"143","severity":1,"message":"151","line":3,"column":10,"nodeType":"145","messageId":"146","endLine":3,"endColumn":25},{"ruleId":"139","replacedBy":"163"},{"ruleId":"141","replacedBy":"164"},{"ruleId":"165","severity":1,"message":"166","line":90,"column":13,"nodeType":"167","messageId":"156","endLine":90,"endColumn":22},{"ruleId":"143","severity":1,"message":"151","line":3,"column":10,"nodeType":"145","messageId":"146","endLine":3,"endColumn":25},{"ruleId":"143","severity":1,"message":"168","line":2,"column":8,"nodeType":"145","messageId":"146","endLine":2,"endColumn":17},{"ruleId":"143","severity":1,"message":"169","line":6,"column":8,"nodeType":"145","messageId":"146","endLine":6,"endColumn":15},{"ruleId":"143","severity":1,"message":"168","line":2,"column":8,"nodeType":"145","messageId":"146","endLine":2,"endColumn":17},{"ruleId":"143","severity":1,"message":"169","line":6,"column":8,"nodeType":"145","messageId":"146","endLine":6,"endColumn":15},{"ruleId":"143","severity":1,"message":"170","line":9,"column":10,"nodeType":"145","messageId":"146","endLine":9,"endColumn":29},"no-native-reassign",["171"],"no-negated-in-lhs",["172"],"no-unused-vars","'ThemeProvider' is defined but never used.","Identifier","unusedVar","'contractAddr' is assigned a value but never used.","'FaIcons' is defined but never used.","'IoIcons' is defined but never used.","'IoWalletSharp' is defined but never used.","'CopyToClipboard' is defined but never used.","'PercentAnimationBox' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.",["171"],["172"],["171"],["172"],"'id' is assigned a value but never used.",["171"],["172"],"no-dupe-keys","Duplicate key 'pair_cont'.","ObjectExpression","'PropTypes' is defined but never used.","'Tooltip' is defined but never used.","'NotificationManager' is defined but never used.","no-global-assign","no-unsafe-negation"]